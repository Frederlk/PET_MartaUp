@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro:regular,600,700&display=swap");
//&display=swap - добавить при подключении через плагин

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Source Sans Pro";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$dark_01: #202020;
$dark_02: #272727;
$white: #fff;
$black: #000;
$primary_01: #ffca00;
$primary_02: #250f8a;
$primary_03: #fa7564;
$blue_01: #1382c0;
$mainColor: #000; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
    overflow-y: scroll;
    overflow-y: overlay;
    background-color: #f4f9fd;
    @include scrollbars(rem(10), $primary_01, transparent);
    // Скролл заблокирован
    .lock & {
        overflow: hidden;
        touch-action: none;
    }
    // Сайт загружен
    .loaded & {
    }
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    // Прижимаем footer
    > main {
        flex: 1 1 auto;
    }
    // Фикс для слайдеров
    > * {
        min-width: 0;
    }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

// Отзывчивая
[class*="__container"] {
    @if ($maxWidthContainer>0) {
        max-width: rem($maxWidthContainer);
        box-sizing: content-box;
        margin: 0 auto;
    }
    @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
    }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";

.page {
    &__home {
    }

    &__special {
        padding-top: rem(110);
        @include adaptiveValue("padding-bottom", 90, 40, 1170, 479.98, 1);
    }

    &__content {
        @include adaptiveValue("padding-top", 64, 40, 1170, 479.98, 1);
        @include adaptiveValue("padding-bottom", 55, 40, 1170, 479.98, 1);
    }

    &__testimonial {
        @include adaptiveValue("padding-top", 40, 30, 1170, 479.98, 1);
        @include adaptiveValue("padding-bottom", 82, 40, 1170, 479.98, 1);
    }
}
